[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[tool.setuptools.packages.find]
where = ["."]
include = ["lab_driver"]
exclude = ["hardware", "example"]
namespaces = false


[tool.hatch.version]
source = "vcs"


[tool.hatch.build.targets.wheel]
packages = ["lab_driver"]
exclude = ['*_test.py']


[project]
name = "lab_driver_daq"
dynamic = ["version"]
description = "Python API for handling Measurement Devices for Enabling automated Testing"
readme = "README.md"
license =  {file = "LICENSE"}
requires-python = ">=3.11"
authors = [
  {name = "Andreas Erbsloeh", email = "andreas.erbsloeh@uni-due.de"},
]
maintainers = [
    {name = 'Ismail Yilmaz', email = 'ismail.yilmaz@stud.uni-due.de'}
]
dependencies = [
    "numpy>=2.2.2",
    "pyserial>=3.5",
    "pyvisa>=1.14.1",
    "pyvisa-py>=0.7.2",
    "pyyaml>=6.0.2",
    "requests>=2.32.3",
    "rsinstrument>=1.90.0",
    "tqdm>=4.67.1",
    "zeroconf>=0.141.0",
]


[tool.uv.sources]
sphinxcontrib-wavedrom = { git = "https://github.com/glencoe/sphinx-wavedrom.git", rev = "hotfix_html_only_version" }


[dependency-groups]
dev = [
    "build>=1.2.2.post1",
    "hatch>=1.14.0",
    "hatch-vcs>=0.4.0",
    "ipykernel>=6.29.5",
    "pre-commit>=4.0.1",
    "tach>=0.23.0",
]
docs = [
    "sphinx>=8.1.3",
    "furo>=2024.8.6",
    "sphinx-autoapi>=3.4.0",
    "sphinx-autobuild>=2024.10.3",
    "sphinx-copybutton>=0.5.2",
    "sphinx-prompt>=1.9.0",
    "sphinxcontrib-plantuml>=0.30",
    "sphinxcontrib-wavedrom>=3.0.4",
    "myst-parser>=4.0.0",
    "sphinxcontrib-mermaid>=1.0.0",
    "linkify>=1.4",
    "linkify-it-py>=2.0.3",
    "sphinx-autodoc2>=0.5.0",
    "sphinxext-opengraph>=0.9.1",
    "sphinxcontrib-kroki>=1.3.0",
    "zundler>=0.2.2",
    "sphinx-book-theme>=1.1.3",
    "sphinx-togglebutton>=0.3.2",
    "htmlark[http,parsers]>=1.0.0",
    "pydata-sphinx-theme>=0.16.1",
    "sphinx-design>=0.6.1",
]
testing = [
    "pytest>=8.3.4",
    "hypothesis>=6.124.7",
    "pytest-cov>=6.0.0",
    "coverage>=7.6.9"
]
lint = ["mypy>=1.13.0", "ruff>=0.9.0"]
lsp = [
    "esbonio>=0.16.5",
    "pylsp-mypy>=0.6.9",
 "pylsp-rope>=0.1.17",
 "python-lsp-server>=1.12.0",
]


[tool.ruff]
include = [
    "pyproject.toml",
    "elasticai/**/*.py",
    "elasticai/**/*.pyi",
    "elasticai/**/*.py",
    "tests/**/*.py",
]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    ".devenv",
]
# Same as Black.
line-length = 88
indent-width = 4
# Assume Python 3.8
target-version = "py38"


[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F", "I"]
ignore = [
    "D101",
    "D102",
    "E741", # ambiguous variable names
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
